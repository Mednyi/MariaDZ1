'use strict';
// Operators types
/*
1. Binary operators (бинарные операторы) - операция с двумя операндами
a + b :  a - 1-й операнд, b- 2-й операнд

2. Unary operator (унарный оператор)- операция с одним операндом
a++ : унарный оператор +

3. Ternary operator (тернарный оператор) - операция с тремя операндами
a == b ? a = 5 : a = 10            - Если а == b, то a=5, иначе a=10
 */

// Работа с числами
/*
+ - * /
** - возвести в степень
% - остаток от деления
() - повышение приоритетности
++ - инкремент
-- - декремент
 */
let a = 5;
let b = 10;
let c;
c = a + b;
c = a * b;
c = a / b;
c = a - b;
c = a ** b;
c = a % b;
(a - b) * c;
// Префиксный инкремент/декремент
++a;
--a;
// Постфиксный инкремент/декремент
a++;
a--;
// Сокращенная арифметика
c = c + 20;
c += 20;
c *= 20;
c **= 20;
c /= 20;

// Работа со строками
let str = '12345';
console.log(+str); // 12345

let str1 = 'Vasya';
let result = str + str1; // 12345Vasya

// Логческие операторы
/*
    || - или
    && - и
    !  - не
 */

// Операторы сравнения
/*
> < =
>=
<=
!=
==    - проверка на равенство с преобразованием (где возможно) типов
===   - строгое равенство (и по типам и по значению)
 */

// Оператор ветвления (Условный оператор)
/*
  if (<условие>) {
    <тело оператора>
  } else if (<доп условие>) {
    <тело оператора доп условия>
  } else {
    <тело оператора в ином случае>
  }
 */

if (a > 5 || a > 1000) {
    console.log(a)
} else if (a < 1 && a != 0) {
    console.log(a+10)
} else {
    console.log("NO")
}

/*
switch (<переменная>) {
    case <значение>:
        <тело case>
        [break]
    case <значение1>:
        <тело case>
        [break]
    default:
        <тело default>
}
 */
b = 5;

switch (b) {
    case 5:
        console.log(b);
        break;
    case 6:
        console.log(b+1);
        break;
    default:
        console.log(b+2);
}

// Операторы циклов
/*
for(<начальное условие>; <условие работы>; <шаг>) {
    <тело цикла>
}

while (<условие>) {  // цикл с предусловием
    <тело цикла>
}

do {
    <тело цикла>
} while (<условие>)
 */

for (let i = 0; i < 10; i++) {
    console.log(i);
}
let i = 0;

while (i<10) {
    console.log(i);
    i++;
}

/*
    Побитовые операторы
    111111111111111111111111
    000111000000000000000000
    111000111111111111111111
    ^ - XOR (исключающее ИЛИ)
    & - AND И
    | - OR или
    ~ - NOT
    >> - RIGHT SHIFT сдвиг вправо
    << - LEFT SHIFT сдвиг влево
 */


